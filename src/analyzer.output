Grammar

    0 $accept: functions $end

    1 functions: ε
    2          | function functions

    3 function_params: ε

    4 function_entry: type tID tLPAR function_params params tRPAR

    5 function: function_entry block

    6 type: tINT
    7     | tVOID

    8 params: params_void
    9       | params_full

   10 params_void: ε
   11            | tVOID

   12 params_full_p1: tINT tID tCOMMA

   13 params_full: tINT tID
   14            | params_full_p1 params_full

   15 block_entry: tLBRACE

   16 block: block_entry instructions tRBRACE

   17 instructions: ε
   18             | instruction instructions

   19 instruction: print tSEMI
   20            | assign tSEMI
   21            | declar tSEMI
   22            | funcreturn tSEMI
   23            | funccall tSEMI
   24            | loop
   25            | condins
   26            | block
   27            | tSEMI

   28 $@1: ε

   29 ifheader: tIF tLPAR condition tRPAR $@1 block

   30 condins: ifheader

   31 $@2: ε

   32 condins: ifheader tELSE $@2 block

   33 expr: term
   34     | expr tADD expr
   35     | expr tSUB expr
   36     | expr tMUL expr
   37     | expr tDIV expr
   38     | tLPAR expr tRPAR
   39     | tADD expr
   40     | tSUB expr

   41 term: tID
   42     | tNB
   43     | funccall

   44 condition: expr
   45          | tNOT expr
   46          | expr tLT expr
   47          | expr tLE expr
   48          | expr tGT expr
   49          | expr tGE expr
   50          | expr tOR expr
   51          | expr tAND expr
   52          | expr tEQ expr
   53          | expr tNEQ expr

   54 $@3: ε

   55 $@4: ε

   56 loop: tWHILE $@3 tLPAR condition $@4 tRPAR block

   57 print: tPRINT tLPAR expr tRPAR

   58 assign: tID tASSIGN expr

   59 declar: tINT tID

   60 $@5: ε

   61 $@6: ε

   62 declar: tINT tID $@5 tASSIGN $@6 expr

   63 funcreturn: tRETURN expr

   64 $@7: ε

   65 funccall: tID tLPAR $@7 callparams tRPAR

   66 callparams: callparams_void
   67           | callparams_full

   68 callparams_void: ε

   69 callparams_full: expr
   70                | expr tCOMMA callparams_full


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    tID <s> (258) 4 12 13 41 58 59 62 65
    tNB <i> (259) 42
    tIF <branch_info> (260) 29
    tWHILE <branch_info> (261) 56
    tELSE <branch_info> (262) 32
    tPRINT (263) 57
    tRETURN (264) 63
    tINT (265) 6 12 13 59 62
    tVOID (266) 7 11
    tLT (267) 46
    tLE (268) 47
    tGT (269) 48
    tGE (270) 49
    tEQ (271) 52
    tNEQ (272) 53
    tASSIGN (273) 58 62
    tADD (274) 34 39
    tSUB (275) 35 40
    tDIV (276) 37
    tMUL (277) 36
    tAND (278) 51
    tOR (279) 50
    tNOT (280) 45
    tLBRACE (281) 15
    tRBRACE (282) 16
    tLPAR (283) 4 29 38 56 57 65
    tRPAR (284) 4 29 38 56 57 65
    tSEMI (285) 19 20 21 22 23 27
    tCOMMA (286) 12 70


Nonterminals, with rules where they appear

    $accept (32)
        on left: 0
    functions (33)
        on left: 1 2
        on right: 0 2
    function_params (34)
        on left: 3
        on right: 4
    function_entry (35)
        on left: 4
        on right: 5
    function (36)
        on left: 5
        on right: 2
    type <f_type> (37)
        on left: 6 7
        on right: 4
    params (38)
        on left: 8 9
        on right: 4
    params_void (39)
        on left: 10 11
        on right: 8
    params_full_p1 (40)
        on left: 12
        on right: 14
    params_full (41)
        on left: 13 14
        on right: 9 14
    block_entry (42)
        on left: 15
        on right: 16
    block (43)
        on left: 16
        on right: 5 26 29 32 56
    instructions (44)
        on left: 17 18
        on right: 16 18
    instruction (45)
        on left: 19 20 21 22 23 24 25 26 27
        on right: 18
    ifheader <branch_info> (46)
        on left: 29
        on right: 30 32
    $@1 (47)
        on left: 28
        on right: 29
    condins (48)
        on left: 30 32
        on right: 25
    $@2 (49)
        on left: 31
        on right: 32
    expr (50)
        on left: 33 34 35 36 37 38 39 40
        on right: 34 35 36 37 38 39 40 44 45 46 47 48 49 50 51 52 53 57 58 62 63 69 70
    term (51)
        on left: 41 42 43
        on right: 33
    condition <is_and> (52)
        on left: 44 45 46 47 48 49 50 51 52 53
        on right: 29 56
    loop (53)
        on left: 56
        on right: 24
    $@3 (54)
        on left: 54
        on right: 56
    $@4 (55)
        on left: 55
        on right: 56
    print (56)
        on left: 57
        on right: 19
    assign (57)
        on left: 58
        on right: 20
    declar (58)
        on left: 59 62
        on right: 21
    $@5 (59)
        on left: 60
        on right: 62
    $@6 (60)
        on left: 61
        on right: 62
    funcreturn (61)
        on left: 63
        on right: 22
    funccall (62)
        on left: 65
        on right: 23 43
    $@7 (63)
        on left: 64
        on right: 65
    callparams (64)
        on left: 66 67
        on right: 65
    callparams_void (65)
        on left: 68
        on right: 66
    callparams_full (66)
        on left: 69 70
        on right: 67 70


State 0

    0 $accept: • functions $end

    tINT   shift, and go to state 1
    tVOID  shift, and go to state 2

    $default  reduce using rule 1 (functions)

    functions       go to state 3
    function_entry  go to state 4
    function        go to state 5
    type            go to state 6


State 1

    6 type: tINT •

    $default  reduce using rule 6 (type)


State 2

    7 type: tVOID •

    $default  reduce using rule 7 (type)


State 3

    0 $accept: functions • $end

    $end  shift, and go to state 7


State 4

    5 function: function_entry • block

    tLBRACE  shift, and go to state 8

    block_entry  go to state 9
    block        go to state 10


State 5

    2 functions: function • functions

    tINT   shift, and go to state 1
    tVOID  shift, and go to state 2

    $default  reduce using rule 1 (functions)

    functions       go to state 11
    function_entry  go to state 4
    function        go to state 5
    type            go to state 6


State 6

    4 function_entry: type • tID tLPAR function_params params tRPAR

    tID  shift, and go to state 12


State 7

    0 $accept: functions $end •

    $default  accept


State 8

   15 block_entry: tLBRACE •

    $default  reduce using rule 15 (block_entry)


State 9

   16 block: block_entry • instructions tRBRACE

    tID      shift, and go to state 13
    tIF      shift, and go to state 14
    tWHILE   shift, and go to state 15
    tPRINT   shift, and go to state 16
    tRETURN  shift, and go to state 17
    tINT     shift, and go to state 18
    tLBRACE  shift, and go to state 8
    tSEMI    shift, and go to state 19

    $default  reduce using rule 17 (instructions)

    block_entry   go to state 9
    block         go to state 20
    instructions  go to state 21
    instruction   go to state 22
    ifheader      go to state 23
    condins       go to state 24
    loop          go to state 25
    print         go to state 26
    assign        go to state 27
    declar        go to state 28
    funcreturn    go to state 29
    funccall      go to state 30


State 10

    5 function: function_entry block •

    $default  reduce using rule 5 (function)


State 11

    2 functions: function functions •

    $default  reduce using rule 2 (functions)


State 12

    4 function_entry: type tID • tLPAR function_params params tRPAR

    tLPAR  shift, and go to state 31


State 13

   58 assign: tID • tASSIGN expr
   65 funccall: tID • tLPAR $@7 callparams tRPAR

    tASSIGN  shift, and go to state 32
    tLPAR    shift, and go to state 33


State 14

   29 ifheader: tIF • tLPAR condition tRPAR $@1 block

    tLPAR  shift, and go to state 34


State 15

   56 loop: tWHILE • $@3 tLPAR condition $@4 tRPAR block

    $default  reduce using rule 54 ($@3)

    $@3  go to state 35


State 16

   57 print: tPRINT • tLPAR expr tRPAR

    tLPAR  shift, and go to state 36


State 17

   63 funcreturn: tRETURN • expr

    tID    shift, and go to state 37
    tNB    shift, and go to state 38
    tADD   shift, and go to state 39
    tSUB   shift, and go to state 40
    tLPAR  shift, and go to state 41

    expr      go to state 42
    term      go to state 43
    funccall  go to state 44


State 18

   59 declar: tINT • tID
   62       | tINT • tID $@5 tASSIGN $@6 expr

    tID  shift, and go to state 45


State 19

   27 instruction: tSEMI •

    $default  reduce using rule 27 (instruction)


State 20

   26 instruction: block •

    $default  reduce using rule 26 (instruction)


State 21

   16 block: block_entry instructions • tRBRACE

    tRBRACE  shift, and go to state 46


State 22

   18 instructions: instruction • instructions

    tID      shift, and go to state 13
    tIF      shift, and go to state 14
    tWHILE   shift, and go to state 15
    tPRINT   shift, and go to state 16
    tRETURN  shift, and go to state 17
    tINT     shift, and go to state 18
    tLBRACE  shift, and go to state 8
    tSEMI    shift, and go to state 19

    $default  reduce using rule 17 (instructions)

    block_entry   go to state 9
    block         go to state 20
    instructions  go to state 47
    instruction   go to state 22
    ifheader      go to state 23
    condins       go to state 24
    loop          go to state 25
    print         go to state 26
    assign        go to state 27
    declar        go to state 28
    funcreturn    go to state 29
    funccall      go to state 30


State 23

   30 condins: ifheader •
   32        | ifheader • tELSE $@2 block

    tELSE  shift, and go to state 48

    $default  reduce using rule 30 (condins)


State 24

   25 instruction: condins •

    $default  reduce using rule 25 (instruction)


State 25

   24 instruction: loop •

    $default  reduce using rule 24 (instruction)


State 26

   19 instruction: print • tSEMI

    tSEMI  shift, and go to state 49


State 27

   20 instruction: assign • tSEMI

    tSEMI  shift, and go to state 50


State 28

   21 instruction: declar • tSEMI

    tSEMI  shift, and go to state 51


State 29

   22 instruction: funcreturn • tSEMI

    tSEMI  shift, and go to state 52


State 30

   23 instruction: funccall • tSEMI

    tSEMI  shift, and go to state 53


State 31

    4 function_entry: type tID tLPAR • function_params params tRPAR

    $default  reduce using rule 3 (function_params)

    function_params  go to state 54


State 32

   58 assign: tID tASSIGN • expr

    tID    shift, and go to state 37
    tNB    shift, and go to state 38
    tADD   shift, and go to state 39
    tSUB   shift, and go to state 40
    tLPAR  shift, and go to state 41

    expr      go to state 55
    term      go to state 43
    funccall  go to state 44


State 33

   65 funccall: tID tLPAR • $@7 callparams tRPAR

    $default  reduce using rule 64 ($@7)

    $@7  go to state 56


State 34

   29 ifheader: tIF tLPAR • condition tRPAR $@1 block

    tID    shift, and go to state 37
    tNB    shift, and go to state 38
    tADD   shift, and go to state 39
    tSUB   shift, and go to state 40
    tNOT   shift, and go to state 57
    tLPAR  shift, and go to state 41

    expr       go to state 58
    term       go to state 43
    condition  go to state 59
    funccall   go to state 44


State 35

   56 loop: tWHILE $@3 • tLPAR condition $@4 tRPAR block

    tLPAR  shift, and go to state 60


State 36

   57 print: tPRINT tLPAR • expr tRPAR

    tID    shift, and go to state 37
    tNB    shift, and go to state 38
    tADD   shift, and go to state 39
    tSUB   shift, and go to state 40
    tLPAR  shift, and go to state 41

    expr      go to state 61
    term      go to state 43
    funccall  go to state 44


State 37

   41 term: tID •
   65 funccall: tID • tLPAR $@7 callparams tRPAR

    tLPAR  shift, and go to state 33

    $default  reduce using rule 41 (term)


State 38

   42 term: tNB •

    $default  reduce using rule 42 (term)


State 39

   39 expr: tADD • expr

    tID    shift, and go to state 37
    tNB    shift, and go to state 38
    tADD   shift, and go to state 39
    tSUB   shift, and go to state 40
    tLPAR  shift, and go to state 41

    expr      go to state 62
    term      go to state 43
    funccall  go to state 44


State 40

   40 expr: tSUB • expr

    tID    shift, and go to state 37
    tNB    shift, and go to state 38
    tADD   shift, and go to state 39
    tSUB   shift, and go to state 40
    tLPAR  shift, and go to state 41

    expr      go to state 63
    term      go to state 43
    funccall  go to state 44


State 41

   38 expr: tLPAR • expr tRPAR

    tID    shift, and go to state 37
    tNB    shift, and go to state 38
    tADD   shift, and go to state 39
    tSUB   shift, and go to state 40
    tLPAR  shift, and go to state 41

    expr      go to state 64
    term      go to state 43
    funccall  go to state 44


State 42

   34 expr: expr • tADD expr
   35     | expr • tSUB expr
   36     | expr • tMUL expr
   37     | expr • tDIV expr
   63 funcreturn: tRETURN expr •

    tADD  shift, and go to state 65
    tSUB  shift, and go to state 66
    tDIV  shift, and go to state 67
    tMUL  shift, and go to state 68

    $default  reduce using rule 63 (funcreturn)


State 43

   33 expr: term •

    $default  reduce using rule 33 (expr)


State 44

   43 term: funccall •

    $default  reduce using rule 43 (term)


State 45

   59 declar: tINT tID •
   62       | tINT tID • $@5 tASSIGN $@6 expr

    tASSIGN   reduce using rule 60 ($@5)
    $default  reduce using rule 59 (declar)

    $@5  go to state 69


State 46

   16 block: block_entry instructions tRBRACE •

    $default  reduce using rule 16 (block)


State 47

   18 instructions: instruction instructions •

    $default  reduce using rule 18 (instructions)


State 48

   32 condins: ifheader tELSE • $@2 block

    $default  reduce using rule 31 ($@2)

    $@2  go to state 70


State 49

   19 instruction: print tSEMI •

    $default  reduce using rule 19 (instruction)


State 50

   20 instruction: assign tSEMI •

    $default  reduce using rule 20 (instruction)


State 51

   21 instruction: declar tSEMI •

    $default  reduce using rule 21 (instruction)


State 52

   22 instruction: funcreturn tSEMI •

    $default  reduce using rule 22 (instruction)


State 53

   23 instruction: funccall tSEMI •

    $default  reduce using rule 23 (instruction)


State 54

    4 function_entry: type tID tLPAR function_params • params tRPAR

    tINT   shift, and go to state 71
    tVOID  shift, and go to state 72

    $default  reduce using rule 10 (params_void)

    params          go to state 73
    params_void     go to state 74
    params_full_p1  go to state 75
    params_full     go to state 76


State 55

   34 expr: expr • tADD expr
   35     | expr • tSUB expr
   36     | expr • tMUL expr
   37     | expr • tDIV expr
   58 assign: tID tASSIGN expr •

    tADD  shift, and go to state 65
    tSUB  shift, and go to state 66
    tDIV  shift, and go to state 67
    tMUL  shift, and go to state 68

    $default  reduce using rule 58 (assign)


State 56

   65 funccall: tID tLPAR $@7 • callparams tRPAR

    tID    shift, and go to state 37
    tNB    shift, and go to state 38
    tADD   shift, and go to state 39
    tSUB   shift, and go to state 40
    tLPAR  shift, and go to state 41

    $default  reduce using rule 68 (callparams_void)

    expr             go to state 77
    term             go to state 43
    funccall         go to state 44
    callparams       go to state 78
    callparams_void  go to state 79
    callparams_full  go to state 80


State 57

   45 condition: tNOT • expr

    tID    shift, and go to state 37
    tNB    shift, and go to state 38
    tADD   shift, and go to state 39
    tSUB   shift, and go to state 40
    tLPAR  shift, and go to state 41

    expr      go to state 81
    term      go to state 43
    funccall  go to state 44


State 58

   34 expr: expr • tADD expr
   35     | expr • tSUB expr
   36     | expr • tMUL expr
   37     | expr • tDIV expr
   44 condition: expr •
   46          | expr • tLT expr
   47          | expr • tLE expr
   48          | expr • tGT expr
   49          | expr • tGE expr
   50          | expr • tOR expr
   51          | expr • tAND expr
   52          | expr • tEQ expr
   53          | expr • tNEQ expr

    tLT   shift, and go to state 82
    tLE   shift, and go to state 83
    tGT   shift, and go to state 84
    tGE   shift, and go to state 85
    tEQ   shift, and go to state 86
    tNEQ  shift, and go to state 87
    tADD  shift, and go to state 65
    tSUB  shift, and go to state 66
    tDIV  shift, and go to state 67
    tMUL  shift, and go to state 68
    tAND  shift, and go to state 88
    tOR   shift, and go to state 89

    $default  reduce using rule 44 (condition)


State 59

   29 ifheader: tIF tLPAR condition • tRPAR $@1 block

    tRPAR  shift, and go to state 90


State 60

   56 loop: tWHILE $@3 tLPAR • condition $@4 tRPAR block

    tID    shift, and go to state 37
    tNB    shift, and go to state 38
    tADD   shift, and go to state 39
    tSUB   shift, and go to state 40
    tNOT   shift, and go to state 57
    tLPAR  shift, and go to state 41

    expr       go to state 58
    term       go to state 43
    condition  go to state 91
    funccall   go to state 44


State 61

   34 expr: expr • tADD expr
   35     | expr • tSUB expr
   36     | expr • tMUL expr
   37     | expr • tDIV expr
   57 print: tPRINT tLPAR expr • tRPAR

    tADD   shift, and go to state 65
    tSUB   shift, and go to state 66
    tDIV   shift, and go to state 67
    tMUL   shift, and go to state 68
    tRPAR  shift, and go to state 92


State 62

   34 expr: expr • tADD expr
   35     | expr • tSUB expr
   36     | expr • tMUL expr
   37     | expr • tDIV expr
   39     | tADD expr •

    tDIV  shift, and go to state 67
    tMUL  shift, and go to state 68

    $default  reduce using rule 39 (expr)


State 63

   34 expr: expr • tADD expr
   35     | expr • tSUB expr
   36     | expr • tMUL expr
   37     | expr • tDIV expr
   40     | tSUB expr •

    tDIV  shift, and go to state 67
    tMUL  shift, and go to state 68

    $default  reduce using rule 40 (expr)


State 64

   34 expr: expr • tADD expr
   35     | expr • tSUB expr
   36     | expr • tMUL expr
   37     | expr • tDIV expr
   38     | tLPAR expr • tRPAR

    tADD   shift, and go to state 65
    tSUB   shift, and go to state 66
    tDIV   shift, and go to state 67
    tMUL   shift, and go to state 68
    tRPAR  shift, and go to state 93


State 65

   34 expr: expr tADD • expr

    tID    shift, and go to state 37
    tNB    shift, and go to state 38
    tADD   shift, and go to state 39
    tSUB   shift, and go to state 40
    tLPAR  shift, and go to state 41

    expr      go to state 94
    term      go to state 43
    funccall  go to state 44


State 66

   35 expr: expr tSUB • expr

    tID    shift, and go to state 37
    tNB    shift, and go to state 38
    tADD   shift, and go to state 39
    tSUB   shift, and go to state 40
    tLPAR  shift, and go to state 41

    expr      go to state 95
    term      go to state 43
    funccall  go to state 44


State 67

   37 expr: expr tDIV • expr

    tID    shift, and go to state 37
    tNB    shift, and go to state 38
    tADD   shift, and go to state 39
    tSUB   shift, and go to state 40
    tLPAR  shift, and go to state 41

    expr      go to state 96
    term      go to state 43
    funccall  go to state 44


State 68

   36 expr: expr tMUL • expr

    tID    shift, and go to state 37
    tNB    shift, and go to state 38
    tADD   shift, and go to state 39
    tSUB   shift, and go to state 40
    tLPAR  shift, and go to state 41

    expr      go to state 97
    term      go to state 43
    funccall  go to state 44


State 69

   62 declar: tINT tID $@5 • tASSIGN $@6 expr

    tASSIGN  shift, and go to state 98


State 70

   32 condins: ifheader tELSE $@2 • block

    tLBRACE  shift, and go to state 8

    block_entry  go to state 9
    block        go to state 99


State 71

   12 params_full_p1: tINT • tID tCOMMA
   13 params_full: tINT • tID

    tID  shift, and go to state 100


State 72

   11 params_void: tVOID •

    $default  reduce using rule 11 (params_void)


State 73

    4 function_entry: type tID tLPAR function_params params • tRPAR

    tRPAR  shift, and go to state 101


State 74

    8 params: params_void •

    $default  reduce using rule 8 (params)


State 75

   14 params_full: params_full_p1 • params_full

    tINT  shift, and go to state 71

    params_full_p1  go to state 75
    params_full     go to state 102


State 76

    9 params: params_full •

    $default  reduce using rule 9 (params)


State 77

   34 expr: expr • tADD expr
   35     | expr • tSUB expr
   36     | expr • tMUL expr
   37     | expr • tDIV expr
   69 callparams_full: expr •
   70                | expr • tCOMMA callparams_full

    tADD    shift, and go to state 65
    tSUB    shift, and go to state 66
    tDIV    shift, and go to state 67
    tMUL    shift, and go to state 68
    tCOMMA  shift, and go to state 103

    $default  reduce using rule 69 (callparams_full)


State 78

   65 funccall: tID tLPAR $@7 callparams • tRPAR

    tRPAR  shift, and go to state 104


State 79

   66 callparams: callparams_void •

    $default  reduce using rule 66 (callparams)


State 80

   67 callparams: callparams_full •

    $default  reduce using rule 67 (callparams)


State 81

   34 expr: expr • tADD expr
   35     | expr • tSUB expr
   36     | expr • tMUL expr
   37     | expr • tDIV expr
   45 condition: tNOT expr •

    tADD  shift, and go to state 65
    tSUB  shift, and go to state 66
    tDIV  shift, and go to state 67
    tMUL  shift, and go to state 68

    $default  reduce using rule 45 (condition)


State 82

   46 condition: expr tLT • expr

    tID    shift, and go to state 37
    tNB    shift, and go to state 38
    tADD   shift, and go to state 39
    tSUB   shift, and go to state 40
    tLPAR  shift, and go to state 41

    expr      go to state 105
    term      go to state 43
    funccall  go to state 44


State 83

   47 condition: expr tLE • expr

    tID    shift, and go to state 37
    tNB    shift, and go to state 38
    tADD   shift, and go to state 39
    tSUB   shift, and go to state 40
    tLPAR  shift, and go to state 41

    expr      go to state 106
    term      go to state 43
    funccall  go to state 44


State 84

   48 condition: expr tGT • expr

    tID    shift, and go to state 37
    tNB    shift, and go to state 38
    tADD   shift, and go to state 39
    tSUB   shift, and go to state 40
    tLPAR  shift, and go to state 41

    expr      go to state 107
    term      go to state 43
    funccall  go to state 44


State 85

   49 condition: expr tGE • expr

    tID    shift, and go to state 37
    tNB    shift, and go to state 38
    tADD   shift, and go to state 39
    tSUB   shift, and go to state 40
    tLPAR  shift, and go to state 41

    expr      go to state 108
    term      go to state 43
    funccall  go to state 44


State 86

   52 condition: expr tEQ • expr

    tID    shift, and go to state 37
    tNB    shift, and go to state 38
    tADD   shift, and go to state 39
    tSUB   shift, and go to state 40
    tLPAR  shift, and go to state 41

    expr      go to state 109
    term      go to state 43
    funccall  go to state 44


State 87

   53 condition: expr tNEQ • expr

    tID    shift, and go to state 37
    tNB    shift, and go to state 38
    tADD   shift, and go to state 39
    tSUB   shift, and go to state 40
    tLPAR  shift, and go to state 41

    expr      go to state 110
    term      go to state 43
    funccall  go to state 44


State 88

   51 condition: expr tAND • expr

    tID    shift, and go to state 37
    tNB    shift, and go to state 38
    tADD   shift, and go to state 39
    tSUB   shift, and go to state 40
    tLPAR  shift, and go to state 41

    expr      go to state 111
    term      go to state 43
    funccall  go to state 44


State 89

   50 condition: expr tOR • expr

    tID    shift, and go to state 37
    tNB    shift, and go to state 38
    tADD   shift, and go to state 39
    tSUB   shift, and go to state 40
    tLPAR  shift, and go to state 41

    expr      go to state 112
    term      go to state 43
    funccall  go to state 44


State 90

   29 ifheader: tIF tLPAR condition tRPAR • $@1 block

    $default  reduce using rule 28 ($@1)

    $@1  go to state 113


State 91

   56 loop: tWHILE $@3 tLPAR condition • $@4 tRPAR block

    $default  reduce using rule 55 ($@4)

    $@4  go to state 114


State 92

   57 print: tPRINT tLPAR expr tRPAR •

    $default  reduce using rule 57 (print)


State 93

   38 expr: tLPAR expr tRPAR •

    $default  reduce using rule 38 (expr)


State 94

   34 expr: expr • tADD expr
   34     | expr tADD expr •
   35     | expr • tSUB expr
   36     | expr • tMUL expr
   37     | expr • tDIV expr

    tDIV  shift, and go to state 67
    tMUL  shift, and go to state 68

    $default  reduce using rule 34 (expr)


State 95

   34 expr: expr • tADD expr
   35     | expr • tSUB expr
   35     | expr tSUB expr •
   36     | expr • tMUL expr
   37     | expr • tDIV expr

    tDIV  shift, and go to state 67
    tMUL  shift, and go to state 68

    $default  reduce using rule 35 (expr)


State 96

   34 expr: expr • tADD expr
   35     | expr • tSUB expr
   36     | expr • tMUL expr
   37     | expr • tDIV expr
   37     | expr tDIV expr •

    $default  reduce using rule 37 (expr)


State 97

   34 expr: expr • tADD expr
   35     | expr • tSUB expr
   36     | expr • tMUL expr
   36     | expr tMUL expr •
   37     | expr • tDIV expr

    $default  reduce using rule 36 (expr)


State 98

   62 declar: tINT tID $@5 tASSIGN • $@6 expr

    $default  reduce using rule 61 ($@6)

    $@6  go to state 115


State 99

   32 condins: ifheader tELSE $@2 block •

    $default  reduce using rule 32 (condins)


State 100

   12 params_full_p1: tINT tID • tCOMMA
   13 params_full: tINT tID •

    tCOMMA  shift, and go to state 116

    $default  reduce using rule 13 (params_full)


State 101

    4 function_entry: type tID tLPAR function_params params tRPAR •

    $default  reduce using rule 4 (function_entry)


State 102

   14 params_full: params_full_p1 params_full •

    $default  reduce using rule 14 (params_full)


State 103

   70 callparams_full: expr tCOMMA • callparams_full

    tID    shift, and go to state 37
    tNB    shift, and go to state 38
    tADD   shift, and go to state 39
    tSUB   shift, and go to state 40
    tLPAR  shift, and go to state 41

    expr             go to state 77
    term             go to state 43
    funccall         go to state 44
    callparams_full  go to state 117


State 104

   65 funccall: tID tLPAR $@7 callparams tRPAR •

    $default  reduce using rule 65 (funccall)


State 105

   34 expr: expr • tADD expr
   35     | expr • tSUB expr
   36     | expr • tMUL expr
   37     | expr • tDIV expr
   46 condition: expr tLT expr •

    tADD  shift, and go to state 65
    tSUB  shift, and go to state 66
    tDIV  shift, and go to state 67
    tMUL  shift, and go to state 68

    $default  reduce using rule 46 (condition)


State 106

   34 expr: expr • tADD expr
   35     | expr • tSUB expr
   36     | expr • tMUL expr
   37     | expr • tDIV expr
   47 condition: expr tLE expr •

    tADD  shift, and go to state 65
    tSUB  shift, and go to state 66
    tDIV  shift, and go to state 67
    tMUL  shift, and go to state 68

    $default  reduce using rule 47 (condition)


State 107

   34 expr: expr • tADD expr
   35     | expr • tSUB expr
   36     | expr • tMUL expr
   37     | expr • tDIV expr
   48 condition: expr tGT expr •

    tADD  shift, and go to state 65
    tSUB  shift, and go to state 66
    tDIV  shift, and go to state 67
    tMUL  shift, and go to state 68

    $default  reduce using rule 48 (condition)


State 108

   34 expr: expr • tADD expr
   35     | expr • tSUB expr
   36     | expr • tMUL expr
   37     | expr • tDIV expr
   49 condition: expr tGE expr •

    tADD  shift, and go to state 65
    tSUB  shift, and go to state 66
    tDIV  shift, and go to state 67
    tMUL  shift, and go to state 68

    $default  reduce using rule 49 (condition)


State 109

   34 expr: expr • tADD expr
   35     | expr • tSUB expr
   36     | expr • tMUL expr
   37     | expr • tDIV expr
   52 condition: expr tEQ expr •

    tADD  shift, and go to state 65
    tSUB  shift, and go to state 66
    tDIV  shift, and go to state 67
    tMUL  shift, and go to state 68

    $default  reduce using rule 52 (condition)


State 110

   34 expr: expr • tADD expr
   35     | expr • tSUB expr
   36     | expr • tMUL expr
   37     | expr • tDIV expr
   53 condition: expr tNEQ expr •

    tADD  shift, and go to state 65
    tSUB  shift, and go to state 66
    tDIV  shift, and go to state 67
    tMUL  shift, and go to state 68

    $default  reduce using rule 53 (condition)


State 111

   34 expr: expr • tADD expr
   35     | expr • tSUB expr
   36     | expr • tMUL expr
   37     | expr • tDIV expr
   51 condition: expr tAND expr •

    tADD  shift, and go to state 65
    tSUB  shift, and go to state 66
    tDIV  shift, and go to state 67
    tMUL  shift, and go to state 68

    $default  reduce using rule 51 (condition)


State 112

   34 expr: expr • tADD expr
   35     | expr • tSUB expr
   36     | expr • tMUL expr
   37     | expr • tDIV expr
   50 condition: expr tOR expr •

    tADD  shift, and go to state 65
    tSUB  shift, and go to state 66
    tDIV  shift, and go to state 67
    tMUL  shift, and go to state 68

    $default  reduce using rule 50 (condition)


State 113

   29 ifheader: tIF tLPAR condition tRPAR $@1 • block

    tLBRACE  shift, and go to state 8

    block_entry  go to state 9
    block        go to state 118


State 114

   56 loop: tWHILE $@3 tLPAR condition $@4 • tRPAR block

    tRPAR  shift, and go to state 119


State 115

   62 declar: tINT tID $@5 tASSIGN $@6 • expr

    tID    shift, and go to state 37
    tNB    shift, and go to state 38
    tADD   shift, and go to state 39
    tSUB   shift, and go to state 40
    tLPAR  shift, and go to state 41

    expr      go to state 120
    term      go to state 43
    funccall  go to state 44


State 116

   12 params_full_p1: tINT tID tCOMMA •

    $default  reduce using rule 12 (params_full_p1)


State 117

   70 callparams_full: expr tCOMMA callparams_full •

    $default  reduce using rule 70 (callparams_full)


State 118

   29 ifheader: tIF tLPAR condition tRPAR $@1 block •

    $default  reduce using rule 29 (ifheader)


State 119

   56 loop: tWHILE $@3 tLPAR condition $@4 tRPAR • block

    tLBRACE  shift, and go to state 8

    block_entry  go to state 9
    block        go to state 121


State 120

   34 expr: expr • tADD expr
   35     | expr • tSUB expr
   36     | expr • tMUL expr
   37     | expr • tDIV expr
   62 declar: tINT tID $@5 tASSIGN $@6 expr •

    tADD  shift, and go to state 65
    tSUB  shift, and go to state 66
    tDIV  shift, and go to state 67
    tMUL  shift, and go to state 68

    $default  reduce using rule 62 (declar)


State 121

   56 loop: tWHILE $@3 tLPAR condition $@4 tRPAR block •

    $default  reduce using rule 56 (loop)
