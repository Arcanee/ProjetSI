Grammaire

    0 $accept: functions $end

    1 functions: %empty
    2          | function functions

    3 function_params: %empty

    4 function_entry: type tID tLPAR function_params params tRPAR

    5 function: function_entry block

    6 type: tINT
    7     | tVOID

    8 params: params_void
    9       | params_full

   10 params_void: %empty
   11            | tVOID

   12 params_full_p1: tINT tID tCOMMA

   13 params_full: tINT tID
   14            | params_full_p1 params_full

   15 block_entry: tLBRACE

   16 block: block_entry instructions tRBRACE

   17 instructions: %empty
   18             | instruction instructions

   19 instruction: print tSEMI
   20            | assign tSEMI
   21            | declar tSEMI
   22            | funcreturn tSEMI
   23            | funccall tSEMI
   24            | loop
   25            | condins
   26            | block
   27            | tSEMI

   28 $@1: %empty

   29 ifheader: tIF tLPAR condition tRPAR $@1 block

   30 condins: ifheader

   31 $@2: %empty

   32 condins: ifheader tELSE $@2 block

   33 expr: term
   34     | expr tADD expr
   35     | expr tSUB expr
   36     | expr tMUL expr
   37     | expr tDIV expr
   38     | tLPAR expr tRPAR
   39     | tADD expr
   40     | tSUB expr

   41 term: tID
   42     | tNB
   43     | funccall

   44 condition: expr
   45          | tNOT expr
   46          | expr tLT expr
   47          | expr tLE expr
   48          | expr tGT expr
   49          | expr tGE expr
   50          | expr tOR expr
   51          | expr tAND expr
   52          | expr tEQ expr
   53          | expr tNEQ expr

   54 $@3: %empty

   55 $@4: %empty

   56 loop: tWHILE $@3 tLPAR condition $@4 tRPAR block

   57 print: tPRINT tLPAR expr tRPAR

   58 assign: tID tASSIGN expr

   59 declar: tINT tID

   60 $@5: %empty

   61 $@6: %empty

   62 declar: tINT tID $@5 tASSIGN $@6 expr

   63 funcreturn: tRETURN expr

   64 $@7: %empty

   65 funccall: tID tLPAR $@7 callparams tRPAR

   66 callparams: callparams_void
   67           | callparams_full

   68 callparams_void: %empty

   69 callparams_full: expr
   70                | expr tCOMMA callparams_full


Terminaux, suivis des règles où ils apparaissent

    $end (0) 0
    error (256)
    tID <s> (258) 4 12 13 41 58 59 62 65
    tNB <i> (259) 42
    tIF <branch_info> (260) 29
    tWHILE <branch_info> (261) 56
    tELSE <branch_info> (262) 32
    tPRINT (263) 57
    tRETURN (264) 63
    tINT (265) 6 12 13 59 62
    tVOID (266) 7 11
    tLT (267) 46
    tLE (268) 47
    tGT (269) 48
    tGE (270) 49
    tEQ (271) 52
    tNEQ (272) 53
    tASSIGN (273) 58 62
    tADD (274) 34 39
    tSUB (275) 35 40
    tDIV (276) 37
    tMUL (277) 36
    tAND (278) 51
    tOR (279) 50
    tNOT (280) 45
    tLBRACE (281) 15
    tRBRACE (282) 16
    tLPAR (283) 4 29 38 56 57 65
    tRPAR (284) 4 29 38 56 57 65
    tSEMI (285) 19 20 21 22 23 27
    tCOMMA (286) 12 70


Non-terminaux, suivis des règles où ils apparaissent

    $accept (32)
        à gauche: 0
    functions (33)
        à gauche: 1 2
        à droite: 0 2
    function_params (34)
        à gauche: 3
        à droite: 4
    function_entry (35)
        à gauche: 4
        à droite: 5
    function (36)
        à gauche: 5
        à droite: 2
    type <f_type> (37)
        à gauche: 6 7
        à droite: 4
    params (38)
        à gauche: 8 9
        à droite: 4
    params_void (39)
        à gauche: 10 11
        à droite: 8
    params_full_p1 (40)
        à gauche: 12
        à droite: 14
    params_full (41)
        à gauche: 13 14
        à droite: 9 14
    block_entry (42)
        à gauche: 15
        à droite: 16
    block (43)
        à gauche: 16
        à droite: 5 26 29 32 56
    instructions (44)
        à gauche: 17 18
        à droite: 16 18
    instruction (45)
        à gauche: 19 20 21 22 23 24 25 26 27
        à droite: 18
    ifheader <branch_info> (46)
        à gauche: 29
        à droite: 30 32
    $@1 (47)
        à gauche: 28
        à droite: 29
    condins (48)
        à gauche: 30 32
        à droite: 25
    $@2 (49)
        à gauche: 31
        à droite: 32
    expr (50)
        à gauche: 33 34 35 36 37 38 39 40
        à droite: 34 35 36 37 38 39 40 44 45 46 47 48 49 50 51 52 53 57 58 62 63 69 70
    term (51)
        à gauche: 41 42 43
        à droite: 33
    condition <is_and> (52)
        à gauche: 44 45 46 47 48 49 50 51 52 53
        à droite: 29 56
    loop (53)
        à gauche: 56
        à droite: 24
    $@3 (54)
        à gauche: 54
        à droite: 56
    $@4 (55)
        à gauche: 55
        à droite: 56
    print (56)
        à gauche: 57
        à droite: 19
    assign (57)
        à gauche: 58
        à droite: 20
    declar (58)
        à gauche: 59 62
        à droite: 21
    $@5 (59)
        à gauche: 60
        à droite: 62
    $@6 (60)
        à gauche: 61
        à droite: 62
    funcreturn (61)
        à gauche: 63
        à droite: 22
    funccall (62)
        à gauche: 65
        à droite: 23 43
    $@7 (63)
        à gauche: 64
        à droite: 65
    callparams (64)
        à gauche: 66 67
        à droite: 65
    callparams_void (65)
        à gauche: 68
        à droite: 66
    callparams_full (66)
        à gauche: 69 70
        à droite: 67 70


État 0

    0 $accept: . functions $end

    tINT   décalage et aller à l'état 1
    tVOID  décalage et aller à l'état 2

    $défaut  réduction par utilisation de la règle 1 (functions)

    functions       aller à l'état 3
    function_entry  aller à l'état 4
    function        aller à l'état 5
    type            aller à l'état 6


État 1

    6 type: tINT .

    $défaut  réduction par utilisation de la règle 6 (type)


État 2

    7 type: tVOID .

    $défaut  réduction par utilisation de la règle 7 (type)


État 3

    0 $accept: functions . $end

    $end  décalage et aller à l'état 7


État 4

    5 function: function_entry . block

    tLBRACE  décalage et aller à l'état 8

    block_entry  aller à l'état 9
    block        aller à l'état 10


État 5

    2 functions: function . functions

    tINT   décalage et aller à l'état 1
    tVOID  décalage et aller à l'état 2

    $défaut  réduction par utilisation de la règle 1 (functions)

    functions       aller à l'état 11
    function_entry  aller à l'état 4
    function        aller à l'état 5
    type            aller à l'état 6


État 6

    4 function_entry: type . tID tLPAR function_params params tRPAR

    tID  décalage et aller à l'état 12


État 7

    0 $accept: functions $end .

    $défaut  accepter


État 8

   15 block_entry: tLBRACE .

    $défaut  réduction par utilisation de la règle 15 (block_entry)


État 9

   16 block: block_entry . instructions tRBRACE

    tID      décalage et aller à l'état 13
    tIF      décalage et aller à l'état 14
    tWHILE   décalage et aller à l'état 15
    tPRINT   décalage et aller à l'état 16
    tRETURN  décalage et aller à l'état 17
    tINT     décalage et aller à l'état 18
    tLBRACE  décalage et aller à l'état 8
    tSEMI    décalage et aller à l'état 19

    $défaut  réduction par utilisation de la règle 17 (instructions)

    block_entry   aller à l'état 9
    block         aller à l'état 20
    instructions  aller à l'état 21
    instruction   aller à l'état 22
    ifheader      aller à l'état 23
    condins       aller à l'état 24
    loop          aller à l'état 25
    print         aller à l'état 26
    assign        aller à l'état 27
    declar        aller à l'état 28
    funcreturn    aller à l'état 29
    funccall      aller à l'état 30


État 10

    5 function: function_entry block .

    $défaut  réduction par utilisation de la règle 5 (function)


État 11

    2 functions: function functions .

    $défaut  réduction par utilisation de la règle 2 (functions)


État 12

    4 function_entry: type tID . tLPAR function_params params tRPAR

    tLPAR  décalage et aller à l'état 31


État 13

   58 assign: tID . tASSIGN expr
   65 funccall: tID . tLPAR $@7 callparams tRPAR

    tASSIGN  décalage et aller à l'état 32
    tLPAR    décalage et aller à l'état 33


État 14

   29 ifheader: tIF . tLPAR condition tRPAR $@1 block

    tLPAR  décalage et aller à l'état 34


État 15

   56 loop: tWHILE . $@3 tLPAR condition $@4 tRPAR block

    $défaut  réduction par utilisation de la règle 54 ($@3)

    $@3  aller à l'état 35


État 16

   57 print: tPRINT . tLPAR expr tRPAR

    tLPAR  décalage et aller à l'état 36


État 17

   63 funcreturn: tRETURN . expr

    tID    décalage et aller à l'état 37
    tNB    décalage et aller à l'état 38
    tADD   décalage et aller à l'état 39
    tSUB   décalage et aller à l'état 40
    tLPAR  décalage et aller à l'état 41

    expr      aller à l'état 42
    term      aller à l'état 43
    funccall  aller à l'état 44


État 18

   59 declar: tINT . tID
   62       | tINT . tID $@5 tASSIGN $@6 expr

    tID  décalage et aller à l'état 45


État 19

   27 instruction: tSEMI .

    $défaut  réduction par utilisation de la règle 27 (instruction)


État 20

   26 instruction: block .

    $défaut  réduction par utilisation de la règle 26 (instruction)


État 21

   16 block: block_entry instructions . tRBRACE

    tRBRACE  décalage et aller à l'état 46


État 22

   18 instructions: instruction . instructions

    tID      décalage et aller à l'état 13
    tIF      décalage et aller à l'état 14
    tWHILE   décalage et aller à l'état 15
    tPRINT   décalage et aller à l'état 16
    tRETURN  décalage et aller à l'état 17
    tINT     décalage et aller à l'état 18
    tLBRACE  décalage et aller à l'état 8
    tSEMI    décalage et aller à l'état 19

    $défaut  réduction par utilisation de la règle 17 (instructions)

    block_entry   aller à l'état 9
    block         aller à l'état 20
    instructions  aller à l'état 47
    instruction   aller à l'état 22
    ifheader      aller à l'état 23
    condins       aller à l'état 24
    loop          aller à l'état 25
    print         aller à l'état 26
    assign        aller à l'état 27
    declar        aller à l'état 28
    funcreturn    aller à l'état 29
    funccall      aller à l'état 30


État 23

   30 condins: ifheader .
   32        | ifheader . tELSE $@2 block

    tELSE  décalage et aller à l'état 48

    $défaut  réduction par utilisation de la règle 30 (condins)


État 24

   25 instruction: condins .

    $défaut  réduction par utilisation de la règle 25 (instruction)


État 25

   24 instruction: loop .

    $défaut  réduction par utilisation de la règle 24 (instruction)


État 26

   19 instruction: print . tSEMI

    tSEMI  décalage et aller à l'état 49


État 27

   20 instruction: assign . tSEMI

    tSEMI  décalage et aller à l'état 50


État 28

   21 instruction: declar . tSEMI

    tSEMI  décalage et aller à l'état 51


État 29

   22 instruction: funcreturn . tSEMI

    tSEMI  décalage et aller à l'état 52


État 30

   23 instruction: funccall . tSEMI

    tSEMI  décalage et aller à l'état 53


État 31

    4 function_entry: type tID tLPAR . function_params params tRPAR

    $défaut  réduction par utilisation de la règle 3 (function_params)

    function_params  aller à l'état 54


État 32

   58 assign: tID tASSIGN . expr

    tID    décalage et aller à l'état 37
    tNB    décalage et aller à l'état 38
    tADD   décalage et aller à l'état 39
    tSUB   décalage et aller à l'état 40
    tLPAR  décalage et aller à l'état 41

    expr      aller à l'état 55
    term      aller à l'état 43
    funccall  aller à l'état 44


État 33

   65 funccall: tID tLPAR . $@7 callparams tRPAR

    $défaut  réduction par utilisation de la règle 64 ($@7)

    $@7  aller à l'état 56


État 34

   29 ifheader: tIF tLPAR . condition tRPAR $@1 block

    tID    décalage et aller à l'état 37
    tNB    décalage et aller à l'état 38
    tADD   décalage et aller à l'état 39
    tSUB   décalage et aller à l'état 40
    tNOT   décalage et aller à l'état 57
    tLPAR  décalage et aller à l'état 41

    expr       aller à l'état 58
    term       aller à l'état 43
    condition  aller à l'état 59
    funccall   aller à l'état 44


État 35

   56 loop: tWHILE $@3 . tLPAR condition $@4 tRPAR block

    tLPAR  décalage et aller à l'état 60


État 36

   57 print: tPRINT tLPAR . expr tRPAR

    tID    décalage et aller à l'état 37
    tNB    décalage et aller à l'état 38
    tADD   décalage et aller à l'état 39
    tSUB   décalage et aller à l'état 40
    tLPAR  décalage et aller à l'état 41

    expr      aller à l'état 61
    term      aller à l'état 43
    funccall  aller à l'état 44


État 37

   41 term: tID .
   65 funccall: tID . tLPAR $@7 callparams tRPAR

    tLPAR  décalage et aller à l'état 33

    $défaut  réduction par utilisation de la règle 41 (term)


État 38

   42 term: tNB .

    $défaut  réduction par utilisation de la règle 42 (term)


État 39

   39 expr: tADD . expr

    tID    décalage et aller à l'état 37
    tNB    décalage et aller à l'état 38
    tADD   décalage et aller à l'état 39
    tSUB   décalage et aller à l'état 40
    tLPAR  décalage et aller à l'état 41

    expr      aller à l'état 62
    term      aller à l'état 43
    funccall  aller à l'état 44


État 40

   40 expr: tSUB . expr

    tID    décalage et aller à l'état 37
    tNB    décalage et aller à l'état 38
    tADD   décalage et aller à l'état 39
    tSUB   décalage et aller à l'état 40
    tLPAR  décalage et aller à l'état 41

    expr      aller à l'état 63
    term      aller à l'état 43
    funccall  aller à l'état 44


État 41

   38 expr: tLPAR . expr tRPAR

    tID    décalage et aller à l'état 37
    tNB    décalage et aller à l'état 38
    tADD   décalage et aller à l'état 39
    tSUB   décalage et aller à l'état 40
    tLPAR  décalage et aller à l'état 41

    expr      aller à l'état 64
    term      aller à l'état 43
    funccall  aller à l'état 44


État 42

   34 expr: expr . tADD expr
   35     | expr . tSUB expr
   36     | expr . tMUL expr
   37     | expr . tDIV expr
   63 funcreturn: tRETURN expr .

    tADD  décalage et aller à l'état 65
    tSUB  décalage et aller à l'état 66
    tDIV  décalage et aller à l'état 67
    tMUL  décalage et aller à l'état 68

    $défaut  réduction par utilisation de la règle 63 (funcreturn)


État 43

   33 expr: term .

    $défaut  réduction par utilisation de la règle 33 (expr)


État 44

   43 term: funccall .

    $défaut  réduction par utilisation de la règle 43 (term)


État 45

   59 declar: tINT tID .
   62       | tINT tID . $@5 tASSIGN $@6 expr

    tASSIGN   réduction par utilisation de la règle 60 ($@5)
    $défaut  réduction par utilisation de la règle 59 (declar)

    $@5  aller à l'état 69


État 46

   16 block: block_entry instructions tRBRACE .

    $défaut  réduction par utilisation de la règle 16 (block)


État 47

   18 instructions: instruction instructions .

    $défaut  réduction par utilisation de la règle 18 (instructions)


État 48

   32 condins: ifheader tELSE . $@2 block

    $défaut  réduction par utilisation de la règle 31 ($@2)

    $@2  aller à l'état 70


État 49

   19 instruction: print tSEMI .

    $défaut  réduction par utilisation de la règle 19 (instruction)


État 50

   20 instruction: assign tSEMI .

    $défaut  réduction par utilisation de la règle 20 (instruction)


État 51

   21 instruction: declar tSEMI .

    $défaut  réduction par utilisation de la règle 21 (instruction)


État 52

   22 instruction: funcreturn tSEMI .

    $défaut  réduction par utilisation de la règle 22 (instruction)


État 53

   23 instruction: funccall tSEMI .

    $défaut  réduction par utilisation de la règle 23 (instruction)


État 54

    4 function_entry: type tID tLPAR function_params . params tRPAR

    tINT   décalage et aller à l'état 71
    tVOID  décalage et aller à l'état 72

    $défaut  réduction par utilisation de la règle 10 (params_void)

    params          aller à l'état 73
    params_void     aller à l'état 74
    params_full_p1  aller à l'état 75
    params_full     aller à l'état 76


État 55

   34 expr: expr . tADD expr
   35     | expr . tSUB expr
   36     | expr . tMUL expr
   37     | expr . tDIV expr
   58 assign: tID tASSIGN expr .

    tADD  décalage et aller à l'état 65
    tSUB  décalage et aller à l'état 66
    tDIV  décalage et aller à l'état 67
    tMUL  décalage et aller à l'état 68

    $défaut  réduction par utilisation de la règle 58 (assign)


État 56

   65 funccall: tID tLPAR $@7 . callparams tRPAR

    tID    décalage et aller à l'état 37
    tNB    décalage et aller à l'état 38
    tADD   décalage et aller à l'état 39
    tSUB   décalage et aller à l'état 40
    tLPAR  décalage et aller à l'état 41

    $défaut  réduction par utilisation de la règle 68 (callparams_void)

    expr             aller à l'état 77
    term             aller à l'état 43
    funccall         aller à l'état 44
    callparams       aller à l'état 78
    callparams_void  aller à l'état 79
    callparams_full  aller à l'état 80


État 57

   45 condition: tNOT . expr

    tID    décalage et aller à l'état 37
    tNB    décalage et aller à l'état 38
    tADD   décalage et aller à l'état 39
    tSUB   décalage et aller à l'état 40
    tLPAR  décalage et aller à l'état 41

    expr      aller à l'état 81
    term      aller à l'état 43
    funccall  aller à l'état 44


État 58

   34 expr: expr . tADD expr
   35     | expr . tSUB expr
   36     | expr . tMUL expr
   37     | expr . tDIV expr
   44 condition: expr .
   46          | expr . tLT expr
   47          | expr . tLE expr
   48          | expr . tGT expr
   49          | expr . tGE expr
   50          | expr . tOR expr
   51          | expr . tAND expr
   52          | expr . tEQ expr
   53          | expr . tNEQ expr

    tLT   décalage et aller à l'état 82
    tLE   décalage et aller à l'état 83
    tGT   décalage et aller à l'état 84
    tGE   décalage et aller à l'état 85
    tEQ   décalage et aller à l'état 86
    tNEQ  décalage et aller à l'état 87
    tADD  décalage et aller à l'état 65
    tSUB  décalage et aller à l'état 66
    tDIV  décalage et aller à l'état 67
    tMUL  décalage et aller à l'état 68
    tAND  décalage et aller à l'état 88
    tOR   décalage et aller à l'état 89

    $défaut  réduction par utilisation de la règle 44 (condition)


État 59

   29 ifheader: tIF tLPAR condition . tRPAR $@1 block

    tRPAR  décalage et aller à l'état 90


État 60

   56 loop: tWHILE $@3 tLPAR . condition $@4 tRPAR block

    tID    décalage et aller à l'état 37
    tNB    décalage et aller à l'état 38
    tADD   décalage et aller à l'état 39
    tSUB   décalage et aller à l'état 40
    tNOT   décalage et aller à l'état 57
    tLPAR  décalage et aller à l'état 41

    expr       aller à l'état 58
    term       aller à l'état 43
    condition  aller à l'état 91
    funccall   aller à l'état 44


État 61

   34 expr: expr . tADD expr
   35     | expr . tSUB expr
   36     | expr . tMUL expr
   37     | expr . tDIV expr
   57 print: tPRINT tLPAR expr . tRPAR

    tADD   décalage et aller à l'état 65
    tSUB   décalage et aller à l'état 66
    tDIV   décalage et aller à l'état 67
    tMUL   décalage et aller à l'état 68
    tRPAR  décalage et aller à l'état 92


État 62

   34 expr: expr . tADD expr
   35     | expr . tSUB expr
   36     | expr . tMUL expr
   37     | expr . tDIV expr
   39     | tADD expr .

    tDIV  décalage et aller à l'état 67
    tMUL  décalage et aller à l'état 68

    $défaut  réduction par utilisation de la règle 39 (expr)


État 63

   34 expr: expr . tADD expr
   35     | expr . tSUB expr
   36     | expr . tMUL expr
   37     | expr . tDIV expr
   40     | tSUB expr .

    tDIV  décalage et aller à l'état 67
    tMUL  décalage et aller à l'état 68

    $défaut  réduction par utilisation de la règle 40 (expr)


État 64

   34 expr: expr . tADD expr
   35     | expr . tSUB expr
   36     | expr . tMUL expr
   37     | expr . tDIV expr
   38     | tLPAR expr . tRPAR

    tADD   décalage et aller à l'état 65
    tSUB   décalage et aller à l'état 66
    tDIV   décalage et aller à l'état 67
    tMUL   décalage et aller à l'état 68
    tRPAR  décalage et aller à l'état 93


État 65

   34 expr: expr tADD . expr

    tID    décalage et aller à l'état 37
    tNB    décalage et aller à l'état 38
    tADD   décalage et aller à l'état 39
    tSUB   décalage et aller à l'état 40
    tLPAR  décalage et aller à l'état 41

    expr      aller à l'état 94
    term      aller à l'état 43
    funccall  aller à l'état 44


État 66

   35 expr: expr tSUB . expr

    tID    décalage et aller à l'état 37
    tNB    décalage et aller à l'état 38
    tADD   décalage et aller à l'état 39
    tSUB   décalage et aller à l'état 40
    tLPAR  décalage et aller à l'état 41

    expr      aller à l'état 95
    term      aller à l'état 43
    funccall  aller à l'état 44


État 67

   37 expr: expr tDIV . expr

    tID    décalage et aller à l'état 37
    tNB    décalage et aller à l'état 38
    tADD   décalage et aller à l'état 39
    tSUB   décalage et aller à l'état 40
    tLPAR  décalage et aller à l'état 41

    expr      aller à l'état 96
    term      aller à l'état 43
    funccall  aller à l'état 44


État 68

   36 expr: expr tMUL . expr

    tID    décalage et aller à l'état 37
    tNB    décalage et aller à l'état 38
    tADD   décalage et aller à l'état 39
    tSUB   décalage et aller à l'état 40
    tLPAR  décalage et aller à l'état 41

    expr      aller à l'état 97
    term      aller à l'état 43
    funccall  aller à l'état 44


État 69

   62 declar: tINT tID $@5 . tASSIGN $@6 expr

    tASSIGN  décalage et aller à l'état 98


État 70

   32 condins: ifheader tELSE $@2 . block

    tLBRACE  décalage et aller à l'état 8

    block_entry  aller à l'état 9
    block        aller à l'état 99


État 71

   12 params_full_p1: tINT . tID tCOMMA
   13 params_full: tINT . tID

    tID  décalage et aller à l'état 100


État 72

   11 params_void: tVOID .

    $défaut  réduction par utilisation de la règle 11 (params_void)


État 73

    4 function_entry: type tID tLPAR function_params params . tRPAR

    tRPAR  décalage et aller à l'état 101


État 74

    8 params: params_void .

    $défaut  réduction par utilisation de la règle 8 (params)


État 75

   14 params_full: params_full_p1 . params_full

    tINT  décalage et aller à l'état 71

    params_full_p1  aller à l'état 75
    params_full     aller à l'état 102


État 76

    9 params: params_full .

    $défaut  réduction par utilisation de la règle 9 (params)


État 77

   34 expr: expr . tADD expr
   35     | expr . tSUB expr
   36     | expr . tMUL expr
   37     | expr . tDIV expr
   69 callparams_full: expr .
   70                | expr . tCOMMA callparams_full

    tADD    décalage et aller à l'état 65
    tSUB    décalage et aller à l'état 66
    tDIV    décalage et aller à l'état 67
    tMUL    décalage et aller à l'état 68
    tCOMMA  décalage et aller à l'état 103

    $défaut  réduction par utilisation de la règle 69 (callparams_full)


État 78

   65 funccall: tID tLPAR $@7 callparams . tRPAR

    tRPAR  décalage et aller à l'état 104


État 79

   66 callparams: callparams_void .

    $défaut  réduction par utilisation de la règle 66 (callparams)


État 80

   67 callparams: callparams_full .

    $défaut  réduction par utilisation de la règle 67 (callparams)


État 81

   34 expr: expr . tADD expr
   35     | expr . tSUB expr
   36     | expr . tMUL expr
   37     | expr . tDIV expr
   45 condition: tNOT expr .

    tADD  décalage et aller à l'état 65
    tSUB  décalage et aller à l'état 66
    tDIV  décalage et aller à l'état 67
    tMUL  décalage et aller à l'état 68

    $défaut  réduction par utilisation de la règle 45 (condition)


État 82

   46 condition: expr tLT . expr

    tID    décalage et aller à l'état 37
    tNB    décalage et aller à l'état 38
    tADD   décalage et aller à l'état 39
    tSUB   décalage et aller à l'état 40
    tLPAR  décalage et aller à l'état 41

    expr      aller à l'état 105
    term      aller à l'état 43
    funccall  aller à l'état 44


État 83

   47 condition: expr tLE . expr

    tID    décalage et aller à l'état 37
    tNB    décalage et aller à l'état 38
    tADD   décalage et aller à l'état 39
    tSUB   décalage et aller à l'état 40
    tLPAR  décalage et aller à l'état 41

    expr      aller à l'état 106
    term      aller à l'état 43
    funccall  aller à l'état 44


État 84

   48 condition: expr tGT . expr

    tID    décalage et aller à l'état 37
    tNB    décalage et aller à l'état 38
    tADD   décalage et aller à l'état 39
    tSUB   décalage et aller à l'état 40
    tLPAR  décalage et aller à l'état 41

    expr      aller à l'état 107
    term      aller à l'état 43
    funccall  aller à l'état 44


État 85

   49 condition: expr tGE . expr

    tID    décalage et aller à l'état 37
    tNB    décalage et aller à l'état 38
    tADD   décalage et aller à l'état 39
    tSUB   décalage et aller à l'état 40
    tLPAR  décalage et aller à l'état 41

    expr      aller à l'état 108
    term      aller à l'état 43
    funccall  aller à l'état 44


État 86

   52 condition: expr tEQ . expr

    tID    décalage et aller à l'état 37
    tNB    décalage et aller à l'état 38
    tADD   décalage et aller à l'état 39
    tSUB   décalage et aller à l'état 40
    tLPAR  décalage et aller à l'état 41

    expr      aller à l'état 109
    term      aller à l'état 43
    funccall  aller à l'état 44


État 87

   53 condition: expr tNEQ . expr

    tID    décalage et aller à l'état 37
    tNB    décalage et aller à l'état 38
    tADD   décalage et aller à l'état 39
    tSUB   décalage et aller à l'état 40
    tLPAR  décalage et aller à l'état 41

    expr      aller à l'état 110
    term      aller à l'état 43
    funccall  aller à l'état 44


État 88

   51 condition: expr tAND . expr

    tID    décalage et aller à l'état 37
    tNB    décalage et aller à l'état 38
    tADD   décalage et aller à l'état 39
    tSUB   décalage et aller à l'état 40
    tLPAR  décalage et aller à l'état 41

    expr      aller à l'état 111
    term      aller à l'état 43
    funccall  aller à l'état 44


État 89

   50 condition: expr tOR . expr

    tID    décalage et aller à l'état 37
    tNB    décalage et aller à l'état 38
    tADD   décalage et aller à l'état 39
    tSUB   décalage et aller à l'état 40
    tLPAR  décalage et aller à l'état 41

    expr      aller à l'état 112
    term      aller à l'état 43
    funccall  aller à l'état 44


État 90

   29 ifheader: tIF tLPAR condition tRPAR . $@1 block

    $défaut  réduction par utilisation de la règle 28 ($@1)

    $@1  aller à l'état 113


État 91

   56 loop: tWHILE $@3 tLPAR condition . $@4 tRPAR block

    $défaut  réduction par utilisation de la règle 55 ($@4)

    $@4  aller à l'état 114


État 92

   57 print: tPRINT tLPAR expr tRPAR .

    $défaut  réduction par utilisation de la règle 57 (print)


État 93

   38 expr: tLPAR expr tRPAR .

    $défaut  réduction par utilisation de la règle 38 (expr)


État 94

   34 expr: expr . tADD expr
   34     | expr tADD expr .
   35     | expr . tSUB expr
   36     | expr . tMUL expr
   37     | expr . tDIV expr

    tDIV  décalage et aller à l'état 67
    tMUL  décalage et aller à l'état 68

    $défaut  réduction par utilisation de la règle 34 (expr)


État 95

   34 expr: expr . tADD expr
   35     | expr . tSUB expr
   35     | expr tSUB expr .
   36     | expr . tMUL expr
   37     | expr . tDIV expr

    tDIV  décalage et aller à l'état 67
    tMUL  décalage et aller à l'état 68

    $défaut  réduction par utilisation de la règle 35 (expr)


État 96

   34 expr: expr . tADD expr
   35     | expr . tSUB expr
   36     | expr . tMUL expr
   37     | expr . tDIV expr
   37     | expr tDIV expr .

    $défaut  réduction par utilisation de la règle 37 (expr)


État 97

   34 expr: expr . tADD expr
   35     | expr . tSUB expr
   36     | expr . tMUL expr
   36     | expr tMUL expr .
   37     | expr . tDIV expr

    $défaut  réduction par utilisation de la règle 36 (expr)


État 98

   62 declar: tINT tID $@5 tASSIGN . $@6 expr

    $défaut  réduction par utilisation de la règle 61 ($@6)

    $@6  aller à l'état 115


État 99

   32 condins: ifheader tELSE $@2 block .

    $défaut  réduction par utilisation de la règle 32 (condins)


État 100

   12 params_full_p1: tINT tID . tCOMMA
   13 params_full: tINT tID .

    tCOMMA  décalage et aller à l'état 116

    $défaut  réduction par utilisation de la règle 13 (params_full)


État 101

    4 function_entry: type tID tLPAR function_params params tRPAR .

    $défaut  réduction par utilisation de la règle 4 (function_entry)


État 102

   14 params_full: params_full_p1 params_full .

    $défaut  réduction par utilisation de la règle 14 (params_full)


État 103

   70 callparams_full: expr tCOMMA . callparams_full

    tID    décalage et aller à l'état 37
    tNB    décalage et aller à l'état 38
    tADD   décalage et aller à l'état 39
    tSUB   décalage et aller à l'état 40
    tLPAR  décalage et aller à l'état 41

    expr             aller à l'état 77
    term             aller à l'état 43
    funccall         aller à l'état 44
    callparams_full  aller à l'état 117


État 104

   65 funccall: tID tLPAR $@7 callparams tRPAR .

    $défaut  réduction par utilisation de la règle 65 (funccall)


État 105

   34 expr: expr . tADD expr
   35     | expr . tSUB expr
   36     | expr . tMUL expr
   37     | expr . tDIV expr
   46 condition: expr tLT expr .

    tADD  décalage et aller à l'état 65
    tSUB  décalage et aller à l'état 66
    tDIV  décalage et aller à l'état 67
    tMUL  décalage et aller à l'état 68

    $défaut  réduction par utilisation de la règle 46 (condition)


État 106

   34 expr: expr . tADD expr
   35     | expr . tSUB expr
   36     | expr . tMUL expr
   37     | expr . tDIV expr
   47 condition: expr tLE expr .

    tADD  décalage et aller à l'état 65
    tSUB  décalage et aller à l'état 66
    tDIV  décalage et aller à l'état 67
    tMUL  décalage et aller à l'état 68

    $défaut  réduction par utilisation de la règle 47 (condition)


État 107

   34 expr: expr . tADD expr
   35     | expr . tSUB expr
   36     | expr . tMUL expr
   37     | expr . tDIV expr
   48 condition: expr tGT expr .

    tADD  décalage et aller à l'état 65
    tSUB  décalage et aller à l'état 66
    tDIV  décalage et aller à l'état 67
    tMUL  décalage et aller à l'état 68

    $défaut  réduction par utilisation de la règle 48 (condition)


État 108

   34 expr: expr . tADD expr
   35     | expr . tSUB expr
   36     | expr . tMUL expr
   37     | expr . tDIV expr
   49 condition: expr tGE expr .

    tADD  décalage et aller à l'état 65
    tSUB  décalage et aller à l'état 66
    tDIV  décalage et aller à l'état 67
    tMUL  décalage et aller à l'état 68

    $défaut  réduction par utilisation de la règle 49 (condition)


État 109

   34 expr: expr . tADD expr
   35     | expr . tSUB expr
   36     | expr . tMUL expr
   37     | expr . tDIV expr
   52 condition: expr tEQ expr .

    tADD  décalage et aller à l'état 65
    tSUB  décalage et aller à l'état 66
    tDIV  décalage et aller à l'état 67
    tMUL  décalage et aller à l'état 68

    $défaut  réduction par utilisation de la règle 52 (condition)


État 110

   34 expr: expr . tADD expr
   35     | expr . tSUB expr
   36     | expr . tMUL expr
   37     | expr . tDIV expr
   53 condition: expr tNEQ expr .

    tADD  décalage et aller à l'état 65
    tSUB  décalage et aller à l'état 66
    tDIV  décalage et aller à l'état 67
    tMUL  décalage et aller à l'état 68

    $défaut  réduction par utilisation de la règle 53 (condition)


État 111

   34 expr: expr . tADD expr
   35     | expr . tSUB expr
   36     | expr . tMUL expr
   37     | expr . tDIV expr
   51 condition: expr tAND expr .

    tADD  décalage et aller à l'état 65
    tSUB  décalage et aller à l'état 66
    tDIV  décalage et aller à l'état 67
    tMUL  décalage et aller à l'état 68

    $défaut  réduction par utilisation de la règle 51 (condition)


État 112

   34 expr: expr . tADD expr
   35     | expr . tSUB expr
   36     | expr . tMUL expr
   37     | expr . tDIV expr
   50 condition: expr tOR expr .

    tADD  décalage et aller à l'état 65
    tSUB  décalage et aller à l'état 66
    tDIV  décalage et aller à l'état 67
    tMUL  décalage et aller à l'état 68

    $défaut  réduction par utilisation de la règle 50 (condition)


État 113

   29 ifheader: tIF tLPAR condition tRPAR $@1 . block

    tLBRACE  décalage et aller à l'état 8

    block_entry  aller à l'état 9
    block        aller à l'état 118


État 114

   56 loop: tWHILE $@3 tLPAR condition $@4 . tRPAR block

    tRPAR  décalage et aller à l'état 119


État 115

   62 declar: tINT tID $@5 tASSIGN $@6 . expr

    tID    décalage et aller à l'état 37
    tNB    décalage et aller à l'état 38
    tADD   décalage et aller à l'état 39
    tSUB   décalage et aller à l'état 40
    tLPAR  décalage et aller à l'état 41

    expr      aller à l'état 120
    term      aller à l'état 43
    funccall  aller à l'état 44


État 116

   12 params_full_p1: tINT tID tCOMMA .

    $défaut  réduction par utilisation de la règle 12 (params_full_p1)


État 117

   70 callparams_full: expr tCOMMA callparams_full .

    $défaut  réduction par utilisation de la règle 70 (callparams_full)


État 118

   29 ifheader: tIF tLPAR condition tRPAR $@1 block .

    $défaut  réduction par utilisation de la règle 29 (ifheader)


État 119

   56 loop: tWHILE $@3 tLPAR condition $@4 tRPAR . block

    tLBRACE  décalage et aller à l'état 8

    block_entry  aller à l'état 9
    block        aller à l'état 121


État 120

   34 expr: expr . tADD expr
   35     | expr . tSUB expr
   36     | expr . tMUL expr
   37     | expr . tDIV expr
   62 declar: tINT tID $@5 tASSIGN $@6 expr .

    tADD  décalage et aller à l'état 65
    tSUB  décalage et aller à l'état 66
    tDIV  décalage et aller à l'état 67
    tMUL  décalage et aller à l'état 68

    $défaut  réduction par utilisation de la règle 62 (declar)


État 121

   56 loop: tWHILE $@3 tLPAR condition $@4 tRPAR block .

    $défaut  réduction par utilisation de la règle 56 (loop)
