Terminals unused in grammar

    tLT
    tLE
    tGT
    tGE
    tAND
    tOR


Grammar

    0 $accept: functions $end

    1 functions: ε
    2          | function functions

    3 $@1: ε

    4 function: type tID tLPAR params tRPAR $@1 block

    5 type: tINT
    6     | tVOID

    7 params: params_void
    8       | params_full

    9 params_void: ε
   10            | tVOID

   11 params_full: type tID
   12            | type tID tCOMMA params_full

   13 $@2: ε

   14 block: tLBRACE $@2 instructions tRBRACE

   15 instructions: ε
   16             | instruction instructions

   17 instruction: print tSEMI
   18            | assign tSEMI
   19            | declar tSEMI
   20            | funcreturn tSEMI
   21            | funccall tSEMI
   22            | loop
   23            | condins
   24            | block
   25            | tSEMI

   26 $@3: ε

   27 ifheader: tIF tLPAR condition tRPAR $@3 block

   28 condins: ifheader

   29 $@4: ε

   30 condins: ifheader tELSE $@4 block

   31 expr: term
   32     | expr tADD expr
   33     | expr tSUB expr
   34     | expr tMUL expr
   35     | expr tDIV expr
   36     | tLPAR expr tRPAR
   37     | tADD expr
   38     | tSUB expr

   39 term: tID
   40     | tNB
   41     | funccall

   42 condition: expr
   43          | tNOT expr
   44          | expr tEQ expr
   45          | term tNEQ expr

   46 $@5: ε

   47 $@6: ε

   48 loop: tWHILE $@5 tLPAR condition $@6 tRPAR block

   49 print: tPRINT tLPAR expr tRPAR

   50 assign: tID tASSIGN expr

   51 declar: tINT tID

   52 $@7: ε

   53 $@8: ε

   54 declar: tINT tID $@7 tASSIGN $@8 expr

   55 funcreturn: tRETURN expr

   56 funccall: tID tLPAR callparams tRPAR

   57 callparams: callparams_void
   58           | callparams_full

   59 callparams_void: ε

   60 callparams_full: expr
   61                | expr tCOMMA callparams_full


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    tID <s> (258) 4 11 12 39 50 51 54 56
    tNB <i> (259) 40
    tIF <branch_info> (260) 27
    tWHILE <branch_info> (261) 48
    tELSE <branch_info> (262) 30
    tPRINT (263) 49
    tRETURN (264) 55
    tINT (265) 5 51 54
    tVOID (266) 6 10
    tLT (267)
    tLE (268)
    tGT (269)
    tGE (270)
    tEQ (271) 44
    tNEQ (272) 45
    tASSIGN (273) 50 54
    tADD (274) 32 37
    tSUB (275) 33 38
    tDIV (276) 35
    tMUL (277) 34
    tAND (278)
    tOR (279)
    tNOT (280) 43
    tLBRACE (281) 14
    tRBRACE (282) 14
    tLPAR (283) 4 27 36 48 49 56
    tRPAR (284) 4 27 36 48 49 56
    tSEMI (285) 17 18 19 20 21 25
    tCOMMA (286) 12 61


Nonterminals, with rules where they appear

    $accept (32)
        on left: 0
    functions (33)
        on left: 1 2
        on right: 0 2
    function (34)
        on left: 4
        on right: 2
    $@1 (35)
        on left: 3
        on right: 4
    type (36)
        on left: 5 6
        on right: 4 11 12
    params (37)
        on left: 7 8
        on right: 4
    params_void (38)
        on left: 9 10
        on right: 7
    params_full (39)
        on left: 11 12
        on right: 8 12
    block (40)
        on left: 14
        on right: 4 24 27 30 48
    $@2 (41)
        on left: 13
        on right: 14
    instructions (42)
        on left: 15 16
        on right: 14 16
    instruction (43)
        on left: 17 18 19 20 21 22 23 24 25
        on right: 16
    ifheader <branch_info> (44)
        on left: 27
        on right: 28 30
    $@3 (45)
        on left: 26
        on right: 27
    condins (46)
        on left: 28 30
        on right: 23
    $@4 (47)
        on left: 29
        on right: 30
    expr (48)
        on left: 31 32 33 34 35 36 37 38
        on right: 32 33 34 35 36 37 38 42 43 44 45 49 50 54 55 60 61
    term (49)
        on left: 39 40 41
        on right: 31 45
    condition <op> (50)
        on left: 42 43 44 45
        on right: 27 48
    loop (51)
        on left: 48
        on right: 22
    $@5 (52)
        on left: 46
        on right: 48
    $@6 (53)
        on left: 47
        on right: 48
    print (54)
        on left: 49
        on right: 17
    assign (55)
        on left: 50
        on right: 18
    declar (56)
        on left: 51 54
        on right: 19
    $@7 (57)
        on left: 52
        on right: 54
    $@8 (58)
        on left: 53
        on right: 54
    funcreturn (59)
        on left: 55
        on right: 20
    funccall (60)
        on left: 56
        on right: 21 41
    callparams (61)
        on left: 57 58
        on right: 56
    callparams_void (62)
        on left: 59
        on right: 57
    callparams_full (63)
        on left: 60 61
        on right: 58 61


State 0

    0 $accept: • functions $end

    tINT   shift, and go to state 1
    tVOID  shift, and go to state 2

    $default  reduce using rule 1 (functions)

    functions  go to state 3
    function   go to state 4
    type       go to state 5


State 1

    5 type: tINT •

    $default  reduce using rule 5 (type)


State 2

    6 type: tVOID •

    $default  reduce using rule 6 (type)


State 3

    0 $accept: functions • $end

    $end  shift, and go to state 6


State 4

    2 functions: function • functions

    tINT   shift, and go to state 1
    tVOID  shift, and go to state 2

    $default  reduce using rule 1 (functions)

    functions  go to state 7
    function   go to state 4
    type       go to state 5


State 5

    4 function: type • tID tLPAR params tRPAR $@1 block

    tID  shift, and go to state 8


State 6

    0 $accept: functions $end •

    $default  accept


State 7

    2 functions: function functions •

    $default  reduce using rule 2 (functions)


State 8

    4 function: type tID • tLPAR params tRPAR $@1 block

    tLPAR  shift, and go to state 9


State 9

    4 function: type tID tLPAR • params tRPAR $@1 block

    tINT   shift, and go to state 1
    tVOID  shift, and go to state 10

    $default  reduce using rule 9 (params_void)

    type         go to state 11
    params       go to state 12
    params_void  go to state 13
    params_full  go to state 14


State 10

    6 type: tVOID •
   10 params_void: tVOID •

    tRPAR     reduce using rule 10 (params_void)
    $default  reduce using rule 6 (type)


State 11

   11 params_full: type • tID
   12            | type • tID tCOMMA params_full

    tID  shift, and go to state 15


State 12

    4 function: type tID tLPAR params • tRPAR $@1 block

    tRPAR  shift, and go to state 16


State 13

    7 params: params_void •

    $default  reduce using rule 7 (params)


State 14

    8 params: params_full •

    $default  reduce using rule 8 (params)


State 15

   11 params_full: type tID •
   12            | type tID • tCOMMA params_full

    tCOMMA  shift, and go to state 17

    $default  reduce using rule 11 (params_full)


State 16

    4 function: type tID tLPAR params tRPAR • $@1 block

    $default  reduce using rule 3 ($@1)

    $@1  go to state 18


State 17

   12 params_full: type tID tCOMMA • params_full

    tINT   shift, and go to state 1
    tVOID  shift, and go to state 2

    type         go to state 11
    params_full  go to state 19


State 18

    4 function: type tID tLPAR params tRPAR $@1 • block

    tLBRACE  shift, and go to state 20

    block  go to state 21


State 19

   12 params_full: type tID tCOMMA params_full •

    $default  reduce using rule 12 (params_full)


State 20

   14 block: tLBRACE • $@2 instructions tRBRACE

    $default  reduce using rule 13 ($@2)

    $@2  go to state 22


State 21

    4 function: type tID tLPAR params tRPAR $@1 block •

    $default  reduce using rule 4 (function)


State 22

   14 block: tLBRACE $@2 • instructions tRBRACE

    tID      shift, and go to state 23
    tIF      shift, and go to state 24
    tWHILE   shift, and go to state 25
    tPRINT   shift, and go to state 26
    tRETURN  shift, and go to state 27
    tINT     shift, and go to state 28
    tLBRACE  shift, and go to state 20
    tSEMI    shift, and go to state 29

    $default  reduce using rule 15 (instructions)

    block         go to state 30
    instructions  go to state 31
    instruction   go to state 32
    ifheader      go to state 33
    condins       go to state 34
    loop          go to state 35
    print         go to state 36
    assign        go to state 37
    declar        go to state 38
    funcreturn    go to state 39
    funccall      go to state 40


State 23

   50 assign: tID • tASSIGN expr
   56 funccall: tID • tLPAR callparams tRPAR

    tASSIGN  shift, and go to state 41
    tLPAR    shift, and go to state 42


State 24

   27 ifheader: tIF • tLPAR condition tRPAR $@3 block

    tLPAR  shift, and go to state 43


State 25

   48 loop: tWHILE • $@5 tLPAR condition $@6 tRPAR block

    $default  reduce using rule 46 ($@5)

    $@5  go to state 44


State 26

   49 print: tPRINT • tLPAR expr tRPAR

    tLPAR  shift, and go to state 45


State 27

   55 funcreturn: tRETURN • expr

    tID    shift, and go to state 46
    tNB    shift, and go to state 47
    tADD   shift, and go to state 48
    tSUB   shift, and go to state 49
    tLPAR  shift, and go to state 50

    expr      go to state 51
    term      go to state 52
    funccall  go to state 53


State 28

   51 declar: tINT • tID
   54       | tINT • tID $@7 tASSIGN $@8 expr

    tID  shift, and go to state 54


State 29

   25 instruction: tSEMI •

    $default  reduce using rule 25 (instruction)


State 30

   24 instruction: block •

    $default  reduce using rule 24 (instruction)


State 31

   14 block: tLBRACE $@2 instructions • tRBRACE

    tRBRACE  shift, and go to state 55


State 32

   16 instructions: instruction • instructions

    tID      shift, and go to state 23
    tIF      shift, and go to state 24
    tWHILE   shift, and go to state 25
    tPRINT   shift, and go to state 26
    tRETURN  shift, and go to state 27
    tINT     shift, and go to state 28
    tLBRACE  shift, and go to state 20
    tSEMI    shift, and go to state 29

    $default  reduce using rule 15 (instructions)

    block         go to state 30
    instructions  go to state 56
    instruction   go to state 32
    ifheader      go to state 33
    condins       go to state 34
    loop          go to state 35
    print         go to state 36
    assign        go to state 37
    declar        go to state 38
    funcreturn    go to state 39
    funccall      go to state 40


State 33

   28 condins: ifheader •
   30        | ifheader • tELSE $@4 block

    tELSE  shift, and go to state 57

    $default  reduce using rule 28 (condins)


State 34

   23 instruction: condins •

    $default  reduce using rule 23 (instruction)


State 35

   22 instruction: loop •

    $default  reduce using rule 22 (instruction)


State 36

   17 instruction: print • tSEMI

    tSEMI  shift, and go to state 58


State 37

   18 instruction: assign • tSEMI

    tSEMI  shift, and go to state 59


State 38

   19 instruction: declar • tSEMI

    tSEMI  shift, and go to state 60


State 39

   20 instruction: funcreturn • tSEMI

    tSEMI  shift, and go to state 61


State 40

   21 instruction: funccall • tSEMI

    tSEMI  shift, and go to state 62


State 41

   50 assign: tID tASSIGN • expr

    tID    shift, and go to state 46
    tNB    shift, and go to state 47
    tADD   shift, and go to state 48
    tSUB   shift, and go to state 49
    tLPAR  shift, and go to state 50

    expr      go to state 63
    term      go to state 52
    funccall  go to state 53


State 42

   56 funccall: tID tLPAR • callparams tRPAR

    tID    shift, and go to state 46
    tNB    shift, and go to state 47
    tADD   shift, and go to state 48
    tSUB   shift, and go to state 49
    tLPAR  shift, and go to state 50

    $default  reduce using rule 59 (callparams_void)

    expr             go to state 64
    term             go to state 52
    funccall         go to state 53
    callparams       go to state 65
    callparams_void  go to state 66
    callparams_full  go to state 67


State 43

   27 ifheader: tIF tLPAR • condition tRPAR $@3 block

    tID    shift, and go to state 46
    tNB    shift, and go to state 47
    tADD   shift, and go to state 48
    tSUB   shift, and go to state 49
    tNOT   shift, and go to state 68
    tLPAR  shift, and go to state 50

    expr       go to state 69
    term       go to state 70
    condition  go to state 71
    funccall   go to state 53


State 44

   48 loop: tWHILE $@5 • tLPAR condition $@6 tRPAR block

    tLPAR  shift, and go to state 72


State 45

   49 print: tPRINT tLPAR • expr tRPAR

    tID    shift, and go to state 46
    tNB    shift, and go to state 47
    tADD   shift, and go to state 48
    tSUB   shift, and go to state 49
    tLPAR  shift, and go to state 50

    expr      go to state 73
    term      go to state 52
    funccall  go to state 53


State 46

   39 term: tID •
   56 funccall: tID • tLPAR callparams tRPAR

    tLPAR  shift, and go to state 42

    $default  reduce using rule 39 (term)


State 47

   40 term: tNB •

    $default  reduce using rule 40 (term)


State 48

   37 expr: tADD • expr

    tID    shift, and go to state 46
    tNB    shift, and go to state 47
    tADD   shift, and go to state 48
    tSUB   shift, and go to state 49
    tLPAR  shift, and go to state 50

    expr      go to state 74
    term      go to state 52
    funccall  go to state 53


State 49

   38 expr: tSUB • expr

    tID    shift, and go to state 46
    tNB    shift, and go to state 47
    tADD   shift, and go to state 48
    tSUB   shift, and go to state 49
    tLPAR  shift, and go to state 50

    expr      go to state 75
    term      go to state 52
    funccall  go to state 53


State 50

   36 expr: tLPAR • expr tRPAR

    tID    shift, and go to state 46
    tNB    shift, and go to state 47
    tADD   shift, and go to state 48
    tSUB   shift, and go to state 49
    tLPAR  shift, and go to state 50

    expr      go to state 76
    term      go to state 52
    funccall  go to state 53


State 51

   32 expr: expr • tADD expr
   33     | expr • tSUB expr
   34     | expr • tMUL expr
   35     | expr • tDIV expr
   55 funcreturn: tRETURN expr •

    tADD  shift, and go to state 77
    tSUB  shift, and go to state 78
    tDIV  shift, and go to state 79
    tMUL  shift, and go to state 80

    $default  reduce using rule 55 (funcreturn)


State 52

   31 expr: term •

    $default  reduce using rule 31 (expr)


State 53

   41 term: funccall •

    $default  reduce using rule 41 (term)


State 54

   51 declar: tINT tID •
   54       | tINT tID • $@7 tASSIGN $@8 expr

    tASSIGN   reduce using rule 52 ($@7)
    $default  reduce using rule 51 (declar)

    $@7  go to state 81


State 55

   14 block: tLBRACE $@2 instructions tRBRACE •

    $default  reduce using rule 14 (block)


State 56

   16 instructions: instruction instructions •

    $default  reduce using rule 16 (instructions)


State 57

   30 condins: ifheader tELSE • $@4 block

    $default  reduce using rule 29 ($@4)

    $@4  go to state 82


State 58

   17 instruction: print tSEMI •

    $default  reduce using rule 17 (instruction)


State 59

   18 instruction: assign tSEMI •

    $default  reduce using rule 18 (instruction)


State 60

   19 instruction: declar tSEMI •

    $default  reduce using rule 19 (instruction)


State 61

   20 instruction: funcreturn tSEMI •

    $default  reduce using rule 20 (instruction)


State 62

   21 instruction: funccall tSEMI •

    $default  reduce using rule 21 (instruction)


State 63

   32 expr: expr • tADD expr
   33     | expr • tSUB expr
   34     | expr • tMUL expr
   35     | expr • tDIV expr
   50 assign: tID tASSIGN expr •

    tADD  shift, and go to state 77
    tSUB  shift, and go to state 78
    tDIV  shift, and go to state 79
    tMUL  shift, and go to state 80

    $default  reduce using rule 50 (assign)


State 64

   32 expr: expr • tADD expr
   33     | expr • tSUB expr
   34     | expr • tMUL expr
   35     | expr • tDIV expr
   60 callparams_full: expr •
   61                | expr • tCOMMA callparams_full

    tADD    shift, and go to state 77
    tSUB    shift, and go to state 78
    tDIV    shift, and go to state 79
    tMUL    shift, and go to state 80
    tCOMMA  shift, and go to state 83

    $default  reduce using rule 60 (callparams_full)


State 65

   56 funccall: tID tLPAR callparams • tRPAR

    tRPAR  shift, and go to state 84


State 66

   57 callparams: callparams_void •

    $default  reduce using rule 57 (callparams)


State 67

   58 callparams: callparams_full •

    $default  reduce using rule 58 (callparams)


State 68

   43 condition: tNOT • expr

    tID    shift, and go to state 46
    tNB    shift, and go to state 47
    tADD   shift, and go to state 48
    tSUB   shift, and go to state 49
    tLPAR  shift, and go to state 50

    expr      go to state 85
    term      go to state 52
    funccall  go to state 53


State 69

   32 expr: expr • tADD expr
   33     | expr • tSUB expr
   34     | expr • tMUL expr
   35     | expr • tDIV expr
   42 condition: expr •
   44          | expr • tEQ expr

    tEQ   shift, and go to state 86
    tADD  shift, and go to state 77
    tSUB  shift, and go to state 78
    tDIV  shift, and go to state 79
    tMUL  shift, and go to state 80

    $default  reduce using rule 42 (condition)


State 70

   31 expr: term •
   45 condition: term • tNEQ expr

    tNEQ  shift, and go to state 87

    $default  reduce using rule 31 (expr)


State 71

   27 ifheader: tIF tLPAR condition • tRPAR $@3 block

    tRPAR  shift, and go to state 88


State 72

   48 loop: tWHILE $@5 tLPAR • condition $@6 tRPAR block

    tID    shift, and go to state 46
    tNB    shift, and go to state 47
    tADD   shift, and go to state 48
    tSUB   shift, and go to state 49
    tNOT   shift, and go to state 68
    tLPAR  shift, and go to state 50

    expr       go to state 69
    term       go to state 70
    condition  go to state 89
    funccall   go to state 53


State 73

   32 expr: expr • tADD expr
   33     | expr • tSUB expr
   34     | expr • tMUL expr
   35     | expr • tDIV expr
   49 print: tPRINT tLPAR expr • tRPAR

    tADD   shift, and go to state 77
    tSUB   shift, and go to state 78
    tDIV   shift, and go to state 79
    tMUL   shift, and go to state 80
    tRPAR  shift, and go to state 90


State 74

   32 expr: expr • tADD expr
   33     | expr • tSUB expr
   34     | expr • tMUL expr
   35     | expr • tDIV expr
   37     | tADD expr •

    tDIV  shift, and go to state 79
    tMUL  shift, and go to state 80

    $default  reduce using rule 37 (expr)


State 75

   32 expr: expr • tADD expr
   33     | expr • tSUB expr
   34     | expr • tMUL expr
   35     | expr • tDIV expr
   38     | tSUB expr •

    tDIV  shift, and go to state 79
    tMUL  shift, and go to state 80

    $default  reduce using rule 38 (expr)


State 76

   32 expr: expr • tADD expr
   33     | expr • tSUB expr
   34     | expr • tMUL expr
   35     | expr • tDIV expr
   36     | tLPAR expr • tRPAR

    tADD   shift, and go to state 77
    tSUB   shift, and go to state 78
    tDIV   shift, and go to state 79
    tMUL   shift, and go to state 80
    tRPAR  shift, and go to state 91


State 77

   32 expr: expr tADD • expr

    tID    shift, and go to state 46
    tNB    shift, and go to state 47
    tADD   shift, and go to state 48
    tSUB   shift, and go to state 49
    tLPAR  shift, and go to state 50

    expr      go to state 92
    term      go to state 52
    funccall  go to state 53


State 78

   33 expr: expr tSUB • expr

    tID    shift, and go to state 46
    tNB    shift, and go to state 47
    tADD   shift, and go to state 48
    tSUB   shift, and go to state 49
    tLPAR  shift, and go to state 50

    expr      go to state 93
    term      go to state 52
    funccall  go to state 53


State 79

   35 expr: expr tDIV • expr

    tID    shift, and go to state 46
    tNB    shift, and go to state 47
    tADD   shift, and go to state 48
    tSUB   shift, and go to state 49
    tLPAR  shift, and go to state 50

    expr      go to state 94
    term      go to state 52
    funccall  go to state 53


State 80

   34 expr: expr tMUL • expr

    tID    shift, and go to state 46
    tNB    shift, and go to state 47
    tADD   shift, and go to state 48
    tSUB   shift, and go to state 49
    tLPAR  shift, and go to state 50

    expr      go to state 95
    term      go to state 52
    funccall  go to state 53


State 81

   54 declar: tINT tID $@7 • tASSIGN $@8 expr

    tASSIGN  shift, and go to state 96


State 82

   30 condins: ifheader tELSE $@4 • block

    tLBRACE  shift, and go to state 20

    block  go to state 97


State 83

   61 callparams_full: expr tCOMMA • callparams_full

    tID    shift, and go to state 46
    tNB    shift, and go to state 47
    tADD   shift, and go to state 48
    tSUB   shift, and go to state 49
    tLPAR  shift, and go to state 50

    expr             go to state 64
    term             go to state 52
    funccall         go to state 53
    callparams_full  go to state 98


State 84

   56 funccall: tID tLPAR callparams tRPAR •

    $default  reduce using rule 56 (funccall)


State 85

   32 expr: expr • tADD expr
   33     | expr • tSUB expr
   34     | expr • tMUL expr
   35     | expr • tDIV expr
   43 condition: tNOT expr •

    tADD  shift, and go to state 77
    tSUB  shift, and go to state 78
    tDIV  shift, and go to state 79
    tMUL  shift, and go to state 80

    $default  reduce using rule 43 (condition)


State 86

   44 condition: expr tEQ • expr

    tID    shift, and go to state 46
    tNB    shift, and go to state 47
    tADD   shift, and go to state 48
    tSUB   shift, and go to state 49
    tLPAR  shift, and go to state 50

    expr      go to state 99
    term      go to state 52
    funccall  go to state 53


State 87

   45 condition: term tNEQ • expr

    tID    shift, and go to state 46
    tNB    shift, and go to state 47
    tADD   shift, and go to state 48
    tSUB   shift, and go to state 49
    tLPAR  shift, and go to state 50

    expr      go to state 100
    term      go to state 52
    funccall  go to state 53


State 88

   27 ifheader: tIF tLPAR condition tRPAR • $@3 block

    $default  reduce using rule 26 ($@3)

    $@3  go to state 101


State 89

   48 loop: tWHILE $@5 tLPAR condition • $@6 tRPAR block

    $default  reduce using rule 47 ($@6)

    $@6  go to state 102


State 90

   49 print: tPRINT tLPAR expr tRPAR •

    $default  reduce using rule 49 (print)


State 91

   36 expr: tLPAR expr tRPAR •

    $default  reduce using rule 36 (expr)


State 92

   32 expr: expr • tADD expr
   32     | expr tADD expr •
   33     | expr • tSUB expr
   34     | expr • tMUL expr
   35     | expr • tDIV expr

    tDIV  shift, and go to state 79
    tMUL  shift, and go to state 80

    $default  reduce using rule 32 (expr)


State 93

   32 expr: expr • tADD expr
   33     | expr • tSUB expr
   33     | expr tSUB expr •
   34     | expr • tMUL expr
   35     | expr • tDIV expr

    tDIV  shift, and go to state 79
    tMUL  shift, and go to state 80

    $default  reduce using rule 33 (expr)


State 94

   32 expr: expr • tADD expr
   33     | expr • tSUB expr
   34     | expr • tMUL expr
   35     | expr • tDIV expr
   35     | expr tDIV expr •

    $default  reduce using rule 35 (expr)


State 95

   32 expr: expr • tADD expr
   33     | expr • tSUB expr
   34     | expr • tMUL expr
   34     | expr tMUL expr •
   35     | expr • tDIV expr

    $default  reduce using rule 34 (expr)


State 96

   54 declar: tINT tID $@7 tASSIGN • $@8 expr

    $default  reduce using rule 53 ($@8)

    $@8  go to state 103


State 97

   30 condins: ifheader tELSE $@4 block •

    $default  reduce using rule 30 (condins)


State 98

   61 callparams_full: expr tCOMMA callparams_full •

    $default  reduce using rule 61 (callparams_full)


State 99

   32 expr: expr • tADD expr
   33     | expr • tSUB expr
   34     | expr • tMUL expr
   35     | expr • tDIV expr
   44 condition: expr tEQ expr •

    tADD  shift, and go to state 77
    tSUB  shift, and go to state 78
    tDIV  shift, and go to state 79
    tMUL  shift, and go to state 80

    $default  reduce using rule 44 (condition)


State 100

   32 expr: expr • tADD expr
   33     | expr • tSUB expr
   34     | expr • tMUL expr
   35     | expr • tDIV expr
   45 condition: term tNEQ expr •

    tADD  shift, and go to state 77
    tSUB  shift, and go to state 78
    tDIV  shift, and go to state 79
    tMUL  shift, and go to state 80

    $default  reduce using rule 45 (condition)


State 101

   27 ifheader: tIF tLPAR condition tRPAR $@3 • block

    tLBRACE  shift, and go to state 20

    block  go to state 104


State 102

   48 loop: tWHILE $@5 tLPAR condition $@6 • tRPAR block

    tRPAR  shift, and go to state 105


State 103

   54 declar: tINT tID $@7 tASSIGN $@8 • expr

    tID    shift, and go to state 46
    tNB    shift, and go to state 47
    tADD   shift, and go to state 48
    tSUB   shift, and go to state 49
    tLPAR  shift, and go to state 50

    expr      go to state 106
    term      go to state 52
    funccall  go to state 53


State 104

   27 ifheader: tIF tLPAR condition tRPAR $@3 block •

    $default  reduce using rule 27 (ifheader)


State 105

   48 loop: tWHILE $@5 tLPAR condition $@6 tRPAR • block

    tLBRACE  shift, and go to state 20

    block  go to state 107


State 106

   32 expr: expr • tADD expr
   33     | expr • tSUB expr
   34     | expr • tMUL expr
   35     | expr • tDIV expr
   54 declar: tINT tID $@7 tASSIGN $@8 expr •

    tADD  shift, and go to state 77
    tSUB  shift, and go to state 78
    tDIV  shift, and go to state 79
    tMUL  shift, and go to state 80

    $default  reduce using rule 54 (declar)


State 107

   48 loop: tWHILE $@5 tLPAR condition $@6 tRPAR block •

    $default  reduce using rule 48 (loop)
